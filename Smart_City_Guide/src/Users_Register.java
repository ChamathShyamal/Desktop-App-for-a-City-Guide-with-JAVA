import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.regex.Matcher;// to search through a text
import java.util.regex.Pattern;//to match in input text.
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class Users_Register extends javax.swing.JFrame {

    /**
     * Creates new form Users_Register
     */
    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    
    public Users_Register() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnRegister = new javax.swing.JButton();
        cmbUserType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTelephone = new javax.swing.JTextField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        rdbFemale = new javax.swing.JRadioButton();
        rdbMale = new javax.swing.JRadioButton();
        cmbFromCountry = new javax.swing.JComboBox<>();
        txtUsername = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(0, 0));
        setMinimumSize(new java.awt.Dimension(1370, 800));
        setPreferredSize(new java.awt.Dimension(1370, 772));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bernard MT Condensed", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("USER REGISTRATION !");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 460, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 51));
        jLabel4.setText("GENDER");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 500, -1, -1));

        txtFirstName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 166, 243, 40));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 51));
        jLabel5.setText("LAST NAME");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 177, -1, -1));

        txtEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 593, 243, 40));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 51));
        jLabel6.setText("EMAIL");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 604, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 51));
        jLabel7.setText("TELEPHONE");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 604, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 51));
        jLabel2.setText("USERNAME");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 287, -1, -1));

        txtLastName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(1009, 166, 236, 40));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 51));
        jLabel3.setText("PASSWORD");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 393, -1, -1));

        txtPassword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 382, 243, 40));

        btnRegister.setBackground(new java.awt.Color(0, 51, 51));
        btnRegister.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("REGISTER");
        btnRegister.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 5, true));
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 680, 131, 50));

        cmbUserType.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Student", "Tourist", "JobSeeker", "Businessman" }));
        getContentPane().add(cmbUserType, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 278, 243, 38));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 51));
        jLabel8.setText("USER TYPE");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 287, -1, -1));

        btnBack.setBackground(new java.awt.Color(153, 0, 0));
        btnBack.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("BACK");
        btnBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 0), 5, true));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 680, 118, 50));

        btnExit.setBackground(new java.awt.Color(153, 0, 0));
        btnExit.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("EXIT");
        btnExit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 0), 5, true));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 680, 115, 50));

        btnClear.setBackground(new java.awt.Color(0, 51, 51));
        btnClear.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 5, true));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 680, 108, 50));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 51));
        jLabel9.setText("FIRST NAME");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 177, -1, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 51));
        jLabel10.setText("CONFIRM ");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 380, -1, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 51));
        jLabel11.setText("FROM COUNTRY");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 502, -1, -1));

        txtTelephone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTelephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelephoneKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelephoneKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(1009, 593, 236, 40));

        txtConfirmPassword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(1009, 382, 236, 40));

        gender.add(rdbFemale);
        rdbFemale.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdbFemale.setForeground(new java.awt.Color(0, 0, 51));
        rdbFemale.setText("Female");
        rdbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFemaleActionPerformed(evt);
            }
        });
        getContentPane().add(rdbFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 490, 83, 40));

        gender.add(rdbMale);
        rdbMale.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rdbMale.setForeground(new java.awt.Color(0, 0, 51));
        rdbMale.setText("Male");
        rdbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMaleActionPerformed(evt);
            }
        });
        getContentPane().add(rdbMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 491, 93, 40));

        cmbFromCountry.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbFromCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", " ", "A", "Afghanistan\t", "Albania\t", "Algeria\t", "American Samoa\t\t\t\t", "Argentina\t", "Armenia\t", "Aruba\t", "Australia\t", "Austria\t", " ", "B\t", "Bangladesh\t\t", "Belarus\t", "Belgium\t\t", "Bermuda\t", "Bhutan\t", "Bolivia\t\t", "Brazil\t", "Bulgaria\t\t", " ", "C", "Cambodia\t\t", "Canada\t\t", "Chad\t", "Chile\t", "China\t", "Christmas Island\t\t", "Colombia\t\t", "Cuba\t", "Cyprus\t\t", "D", "Denmark\t", "Djibouti\t", "Dominica\t", "Dominican Republic\t", " ", "E", "East Timor (Timor-Leste)\t", "Ecuador\t", "Egypt\t", "El Salvador\t", "Equatorial Guinea\t", "Eritrea\t", "Estonia\t", "Ethiopia\t", " ", "F", "Falkland Islands\t", "Faroe Islands\t", "Fiji\t", "Finland\t", "France\t", "French Guiana\t", "French Polynesia\t", "French Southern Territories\t", "G", "Gabon\t", "The Gambia\t", "Georgia\t", "Germany\t", "Ghana\t", "Gibraltar\t", "Greece\t", "Greenland\t", "Grenada\t", "Guadeloupe\t", "Guatemala\t", "Guinea\t", "Guyana\t", " ", "H", " \t ", "Hong Kong\t", "Hungary\t", " ", "I", "Iceland\t", "India\t", "Indonesia\t", "Iran (Islamic Republic of)\t", "Iraq\t", "Ireland\t", "Israel\t", "Italy\t", " ", "J", "Jamaica\t", "Japan\t", "Jordan\t", " ", "K", "Kazakhstan\t", "Kenya\t", "Korea\t", "Kuwait\t", " ", "L", "Latvia\t\t", "Lebanon\t", "Libya\t", " ", "M", "Madagascar\t", "Malaysia\t", "Maldives\t", "Marshall Islands\t", "Mexico\t", "Mongolia\t", "Morocco\t", "Myanmar, Burma\t", " ", "N", "Namibia\t", "Nepal\t", "Netherlands\t", "New Zealand\t", "Nigeria\t", "Norway\t", " ", "O", "Oman\t", " ", "P", "Pakistan\t", "Panama\t", "Papua New Guinea\t", "Peru\t", "Philippines\t", "Poland\t", "Portugal\t", " ", "Q", "Qatar\t", " ", "R", "Romania\t", "Russian ", " ", "S", "Saudi Arabia\t", "Serbia\t", "Singapore\t", "Somalia\t", "South Africa\t", "Spain\t", "Sri Lanka\t", "Sweden\t", "Switzerland\t", " ", "T", "Taiwan ", "Tanzania", "Thailand\t", "Tibet\t", "Turkey\t", " ", "U", "Uganda\t", "Ukraine\t", "United Arab Emirates\t", "United Kingdom\t", "United States\t", " ", "V", "Vietnam\t", "Virgin Islands (British)\t", " ", "W", "Wallis and Futuna Islands\t", "Western Sahara\t", " ", "Y", "Yemen\t", " ", "Z", "Zambia\t", "Zimbabwe", " " }));
        getContentPane().add(cmbFromCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(1009, 493, 236, 38));

        txtUsername.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(1009, 276, 236, 40));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 51));
        jLabel13.setText("PASSWORD");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 410, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeMenu3.jpg"))); // NOI18N
        jLabel12.setText("jLabel12");
        jLabel12.setMaximumSize(new java.awt.Dimension(0, 0));
        jLabel12.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel12.setName(""); // NOI18N
        jLabel12.setPreferredSize(new java.awt.Dimension(1370, 772));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1370, 810));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // Coding to clear fields in the form 
        txtFirstName.setText("");
        txtLastName.setText("");
        cmbUserType.setSelectedIndex(0);
        txtUsername.setText("");
        txtPassword.setText("");
        gender.clearSelection();
        txtConfirmPassword.setText("");
        cmbFromCountry.setSelectedIndex(0);
        txtEmail.setText("");
        txtTelephone.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // Coding for registering users
        //Declaring variable to get text field values
        String fName = txtFirstName.getText();
        String lName = txtLastName.getText();
        String uName = txtUsername.getText();
        String pswd = txtPassword.getText();
        String gender1 = rdbMale.getText();
        String gender2 = rdbFemale.getText();
        String email = txtEmail.getText();
        String tel = txtTelephone.getText();
        
        String uType = cmbUserType.getSelectedItem().toString();
        String frmCountry = cmbFromCountry.getSelectedItem().toString();
        
        boolean valid= true;
        
        //The coding below will be functined only if the user have filled the form wrong        
        //Checking for empty fields
        if(txtFirstName.getText().length()<=0 || txtLastName.getText().length()<=0 
          || uType.equals("Select") || txtUsername.getText().length()<=0 || 
          txtPassword.getText().length()<=0 || rdbMale.getText().length()<=0 || 
          rdbFemale.getText().length()<=0 || frmCountry.equals("Select") || 
          txtEmail.getText().length()<=0 || txtTelephone.getText().length()<=0)
        {
        JOptionPane.showMessageDialog(null, "Fields can't be blank , Fill & Try Again ! ", 
                "Users Register", JOptionPane.WARNING_MESSAGE);
        
        valid=false;
        } 
        
        else{
            //Code for validating email to the format of (xxxxxx@gmail.com)
            String PATTERN = "^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-zA-Z]{0,5}$";
            Pattern patt = Pattern.compile(PATTERN);
            Matcher match=patt.matcher(txtEmail.getText());
            
                if (!match.matches())
                {
                    JOptionPane.showMessageDialog(null,"Enter a Valid Email !",
                            "Users Register", JOptionPane.ERROR_MESSAGE);

                        valid = false; 
                }
                //Limiting the password only up to 8 characters
                else if ( txtPassword.getText().toString().length()<8)
                {
                    JOptionPane.showMessageDialog(null,"Password should contain eight(8) "
                            + "characters ","Users Register", JOptionPane.ERROR_MESSAGE);

                        valid = false; 
                }
                //Validating Password and Confirm Password shound be equal
                else if (!txtPassword.getText().equals (txtConfirmPassword.getText()))
                {
                    JOptionPane.showMessageDialog(null,"ERROR! Password and the "
                 + "Confirm Password should match !", "Users Register" ,JOptionPane.ERROR_MESSAGE);
                 
                        valid=false;
                 }
                //Validating empty fields of radio buttons
                 else if(!(rdbMale.isSelected() | rdbFemale.isSelected() ))
                 {
                    JOptionPane.showMessageDialog(null,"ERROR! Gender field cannot "
                   + "be empty !", "Users Register" ,JOptionPane.WARNING_MESSAGE);
                 
                        valid=false;   
                 }
        }
        //The coding below will be functined only if the user have filled the form correcty
        if(valid)
        {
        //using try...catch block to catch if there's any exception
        try 
        {
          //SQL query to insert data into the login_reg_table in the database
          String query = "INSERT INTO `login_reg_table`(`FirstName`, `LastName`, "
                  + "`UserType`, `Username`, `Password`, `Gender`, `FromCountry`, "
                  + "`Email`, `Telephone`) VALUES (?,?,?,?,?,?,?,?,?)" ;
        
          //Calling the dbConnection public method in dbConnection class
           con = dbConnection.getConnection();
           ps=con.prepareStatement(query);

           ps.setString(1, txtFirstName.getText());
           ps.setString(2, txtLastName.getText());
           ps.setString(3, cmbUserType.getSelectedItem().toString());
           ps.setString(4, txtUsername.getText());
           ps.setString(5, txtPassword.getText()); 
           ps.setString(6, sex);
           ps.setString(7, cmbFromCountry.getSelectedItem().toString());
           ps.setString(8, txtEmail.getText());
           ps.setString(9, txtTelephone.getText());
           
           ps.executeUpdate(); 
           
           JOptionPane.showMessageDialog(null,"Account Created Successfully");
                 
        } 
        catch (Exception ex) 
        {
            System.out.println(""+ex);
        }
      }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void rdbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMaleActionPerformed
        // Equalizing sex variable to value Male
        sex="Male";
    }//GEN-LAST:event_rdbMaleActionPerformed

    private void rdbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFemaleActionPerformed
        // // Equalizing sex variable to value Female
        sex="Female";
    }//GEN-LAST:event_rdbFemaleActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // To exit the system
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        dispose();
        //Directing to Users_Login window when user pressed Back button
        Users_Login ul= new Users_Login();
        ul.setTitle ( "Users Login");
        ul.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtTelephoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephoneKeyPressed
       // Telephone Text Field Valoidation Code

       //To allow Type only from 1 to 9  digits and type a telephone number 
       //of 11 digits number(uk)
        String pNo = txtTelephone.getText();
        int length = pNo.length();
         
        int c = evt.getKeyChar();
        
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9')
        {
        //check for length not more than 11 digits
            if(length<11) 
            {
                txtTelephone.setEditable(true);
            }
            else
            {
              JOptionPane.showMessageDialog(null,"Enter a Valid Telephone No less "
              + "than 11 Digits !","Users Register", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtTelephoneKeyPressed

    private void txtTelephoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephoneKeyTyped
         //To allow type only numbers inside the Telephone textfield
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || c==KeyEvent.VK_DELETE)) 
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelephoneKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Users_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Users_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Users_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Users_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Users_Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> cmbFromCountry;
    private javax.swing.JComboBox<String> cmbUserType;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton rdbFemale;
    private javax.swing.JRadioButton rdbMale;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTelephone;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    private String sex;//Making a private string called 'sex' to get values 
    //in radio buttons
}
